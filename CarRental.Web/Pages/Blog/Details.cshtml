@page "/blog/{urlHandle}"
@using Microsoft.AspNetCore.Identity
@model Details
@inject UserManager<IdentityUser> UserManager
@inject SignInManager<IdentityUser> SignInManager


@if (Model.BlogPost != null)
{
    <div class="container my-5">
        <div class="row justify-content-center">
            <div class="col-12 col-lg-7">
                <h1 class="mb-3">@Model.BlogPost.Heading</h1>

                <div class="d-flex justify-content-between mb-3">
                    <span class="text-secondary">@Model.BlogPost.Author</span>
                    <span class="text-secondary">@Model.BlogPost.PublishedDate.ToShortDateString()</span>
                </div>
                <div class="mb-3">
                    <span>
                        @if (SignInManager.IsSignedIn(User))
                        {
                            @if (Model.Liked)
                            {
                                <a style="cursor: pointer">
                                    <i class="bi bi-hand-thumbs-up-fill"></i>
                                </a>
                            }
                            else
                            {
                                <a id="BtnLike" style="cursor: pointer">
                                    <i class="bi bi-hand-thumbs-up"></i>
                                </a>
                            }
                        }

                        <span id="totallikes">@Model.TotalLikes</span> likes
                    </span>
                </div>
                <div class="mb-3">
                    @if (Model.BlogPost.Tags != null)
                    {
                        foreach (var tag in Model.BlogPost.Tags)
                        {
                            <a href="/tags/@tag.Name" style="color: inherit; text-decoration: inherit">
                                <span class="badge bg-dark">@tag.Name</span>
                            </a>
                        }
                    }
                </div>
                <img src="@Model.BlogPost.FeaturedImageUrl" class="d-block img-fluid mb-3" alt="@Model.BlogPost.ShortDescription"/>
                <div class="mb-3 blog-details">
                    @Html.Raw(Model.BlogPost.Content)
                </div>

                <div class="card">
                    <div class="card-header">
                        <h5>Comments</h5>

                        @if (SignInManager.IsSignedIn(User))
                        {
                            <form method="post">
                                <div class="mb-3">
                                    <label class="form-label">Comment Description</label>
                                    <input type="text" class="form-control" asp-for="CommentDescription">
                                    <span class="text-danger" asp-validation-for="CommentDescription"></span>
                                </div>
                                <div class="mb-3">
                                    <button type="submit" class="btn btn-dark">Add Comment</button>
                                    <input type="hidden" asp-for="BlogPostId"/>
                                </div>
                            </form>
                        }
                    </div>
                    <div class="card-body">
                        @foreach (var comment in Model.Comments)
                        {
                            <div class="card mb-3">
                                <div class="card-body">
                                    <div>
                                        @comment.Description
                                    </div>
                                    <div class="d-flex justify-content-between">
                                        <span class="text-secondary">@comment.Username</span>
                                        <span class="text-secondary">@comment.DateAdded.ToShortDateString()</span>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>

            </div>
        </div>
    </div>

@section Scripts {
    <script>
        const btnLike = document.getElementById('BtnLike');
        const totalLikesElement = document.getElementById("totallikes");
        async function getTotalLikes(){
            fetch('/api/BlogPostLike/@Model.BlogPost.Id/totalLikes', {
                        method: 'GET',
                            headers: {
                                'Content-Type' : 'application/json',
                                'Accept': '*/*'
                            },
                        })   
                        .then(data => data.json())
                        .then(result => totalLikesElement.innerHTML = result); 
        }
            
        async function addLikeForBlog(){
            fetch('/api/BlogPostLike/Add',{
                method: 'POST',
                headers: {
                    'Content-Type' : 'application/json',
                    'Accept': '*/*'
                },
                body: JSON.stringify({blogPostId : '@Model.BlogPost.Id', userId : '@UserManager.GetUserId(User)'})
            })
            .then(()=>{
                btnLike.innerHTML = '<i class="bi bi-hand-thumbs-up-fill"></i>';  
                btnLike.removeEventListener('click',addLikeForBlog);
                getTotalLikes();
            });
        }
        btnLike.addEventListener('click', addLikeForBlog);
    
    
    </script>
}
}
else
{
    <div class="container">
        <h1>Blog Post Was Not Found!!!</h1>
    </div>
}